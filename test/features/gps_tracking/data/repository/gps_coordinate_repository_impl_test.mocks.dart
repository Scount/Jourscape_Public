// Mocks generated by Mockito 5.4.6 from annotations
// in jourscape/test/features/gps_tracking/data/repository/gps_coordinate_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter/material.dart' as _i5;
import 'package:jourscape/features/gps_tracking/data/datasources/gps_coordinate_local_datasource.dart'
    as _i3;
import 'package:jourscape/features/gps_tracking/data/models/gps_coordinate_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGpsCoordinateModel_0 extends _i1.SmartFake
    implements _i2.GpsCoordinateModel {
  _FakeGpsCoordinateModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [GPSCoordinateLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGPSCoordinateLocalDataSource extends _i1.Mock
    implements _i3.GPSCoordinateLocalDataSource {
  MockGPSCoordinateLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> initDatabase() =>
      (super.noSuchMethod(
            Invocation.method(#initDatabase, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> closeDatabase() =>
      (super.noSuchMethod(
            Invocation.method(#closeDatabase, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i2.GpsCoordinateModel> createGPSCoordinate(
    _i2.GpsCoordinateModel? coordinate,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createGPSCoordinate, [coordinate]),
            returnValue: _i4.Future<_i2.GpsCoordinateModel>.value(
              _FakeGpsCoordinateModel_0(
                this,
                Invocation.method(#createGPSCoordinate, [coordinate]),
              ),
            ),
          )
          as _i4.Future<_i2.GpsCoordinateModel>);

  @override
  _i4.Future<List<_i2.GpsCoordinateModel>> getCoordinatesByDate(
    DateTime? dateTime,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getCoordinatesByDate, [dateTime]),
            returnValue: _i4.Future<List<_i2.GpsCoordinateModel>>.value(
              <_i2.GpsCoordinateModel>[],
            ),
          )
          as _i4.Future<List<_i2.GpsCoordinateModel>>);

  @override
  _i4.Future<List<_i2.GpsCoordinateModel>> getCoordinatesByDateRange(
    _i5.DateTimeRange<DateTime>? dateRange,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getCoordinatesByDateRange, [dateRange]),
            returnValue: _i4.Future<List<_i2.GpsCoordinateModel>>.value(
              <_i2.GpsCoordinateModel>[],
            ),
          )
          as _i4.Future<List<_i2.GpsCoordinateModel>>);

  @override
  _i4.Future<int> updateCoordinate(_i2.GpsCoordinateModel? coordinate) =>
      (super.noSuchMethod(
            Invocation.method(#updateCoordinate, [coordinate]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<int> deleteCoordinate(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteCoordinate, [id]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<DateTime?> getLowestStoredDateTime() =>
      (super.noSuchMethod(
            Invocation.method(#getLowestStoredDateTime, []),
            returnValue: _i4.Future<DateTime?>.value(),
          )
          as _i4.Future<DateTime?>);
}
